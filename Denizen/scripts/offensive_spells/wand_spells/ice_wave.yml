ice_wave_listing:
    type: item
    spelltype: wand
    spell: ice_wave
    lv: 1
    skillpointlv: 10
    levelflag: icewavelevel
    skillpointmax: 6
    material: book
    mechanisms:
        unbreakable: true
    display name: ice Wave
    lore:
    - a slowmoving wave of ice that saps the life of its victims.
    enchantments:
    - knockback:2
        
ice_wave:
    type: task
    script:
    - if !<player.has_flag[icewavelevel]>:
        - flag player icewavelevel:1
    - define lavabeam:cu@<player.eye_location>|<player.location.cursor_on[25].simple>
    - define cursor_aim:<player.eye_location.points_between[<player.location.cursor_on[25].ignore[water|flowing_water|grass|tall_grass|air]>]>
    - playsound <player.location.cursor_on[5]> sound:BLOCK_CAMPice_CRACKLE
    - playsound <player.location.cursor_on[5]> sound:BLOCK_ice_AMBIENT
    - define randomint:<util.random.int[1].to[1000]>
    - define last:<player.eye_location.forward[1].points_between[<player.location.cursor_on[25].ignore[water|flowing_water|grass|tall_grass|air]>].last>
    - define foreachskip 0
    - foreach <player.eye_location.forward[1].points_between[<player.location.cursor_on[25].ignore[water_source|flowing_water|grass|tall_grass|air]>]>:
        - define foreachskip:+:1
        - playeffect effect:spell at:<[value]> quantity:1 visibility:35
        - playeffect effect:spell at:<[value]> quantity:5 offset:0,0,0 visibility:35

        - if <[foreachskip].mod[2]> == 0:
            - wait 1t
        - define locationcheck <[value].find.living_entities.within[2].exclude[<player>]>
        - if <[locationcheck].size> > 0:
            - foreach <[locationcheck]>:
                - define target <[value]>
                - if <[target].flag[ice_spell_1_damagetaken].is_expired> || !<[target].has_flag[ice_spell_1_damagetaken]>:
                    - narrate <proc[ice_wave_damage].context[<[target]>]>
                    - run ice_Wave_damage def:<[target]>
                    - run ice_wave_slow def:<[target]>
                - else:
                    - announce "entity already damaged"

        - if <[value]> == <[last]>:
            - playeffect effect:EXPLOSION_LARGE at:<[last]> quantity:10 visibility:35
            - playsound <[last]> sound:block_glass_break volume:1.8
            - foreach stop
ice_wave_slow:
    type: task
    speed: instant
    definitions: target
    script:
    - choose <proc[target_check].context[<[target]>]>:
        - case mythicmob:
            - adjust <[target]> Speed:0.1
            - wait 5s
            - adjust <[target]> Speed:0.2
        - case enemyplayer:
            - adjust <[target]> walk_Speed:0.1
            - wait 5s
            - adjust <[target]> walk_Speed:0.2
        - case regularmob:
            - adjust <[target]> Speed:0.1
            - wait 5s
            - adjust <[target]> Speed:0.2


ice_wave_damage:
    type: task
    speed: instant
    definitions: target
    script:
        - define icewavebasedmg <player.flag[icewavelevel].mul[5].add[0]>
        - define intscaling <proc[total_int].div[20]>
        - define playermdmg <proc[final_mdmg].div[20]>
        - define icewavefinaldmg <[icewavebasedmg].add[<[intscaling]>].add[<[playermdmg]>].round_down>
        - choose <proc[target_check].context[<[target]>]>:
                - case mythicmob:
                    - define combined <[target].flag[pdef].add[<[icewavefinaldmg]>]>
                    - define defreduc <[icewavefinaldmg].div[<[combined]>]>
                    - define final <[icewavefinaldmg].mul[<[defreduc]>]>
                    - adjust <[target]> no_damage_duration:1t
                    - hurt <[target]> <[final].round_to[0]> source:<player>
                - case enemyplayer:
                    - define combined <[target].flag[final_pdef].add[<[icewavefinaldmg]>]>
                    - define defreduc <[icewavefinaldmg].div[<[combined]>]>
                    - define final <[icewavefinaldmg].mul[<[defreduc]>]>
                    - adjust <[target]> no_damage_duration:1t
                    - hurt <[target]> <[final].round_to[0]> source:<player>
                - case regularmob:
                    - adjust <[target]> no_damage_duration:1t
                    - hurt <[target]> <[icewavefinaldmg]> source:<player>